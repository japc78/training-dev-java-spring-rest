version: '3.5'

name: training-dev-java-spring

services:
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - .\prometheus\etc:/etc/prometheus
      - .\prometheus\data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - .\grafana\provisioning\datasources:/etc/grafana/provisioning/datasources
      - .\grafana\data:/var/lib/grafana

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - .\redis\data:/data

  # zookeeper:
  #   image: docker.io/bitnami/zookeeper:3.8
  #   ports:
  #     - "2181:2181"
  #   volumes:
  #     - .\zookeeper:/bitnami
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes

  # kafka:
  #   image: docker.io/bitnami/kafka:3.4
  #   ports:
  #     - "9092:9092"
  #   volumes:
  #     - .\kafka:/bitnami
  #   environment:
  #     - KAFKA_ADVERTISED_HOST_NAME kafka
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #   depends_on:
  #     - zookeeper

#   zookeeper:
#     image: confluentinc/cp-zookeeper:5.5.0
#     container_name: zookeeper
#     networks:
#       - rmoff_kafka
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181

#   broker:
#     image: confluentinc/cp-kafka:5.5.0
#     container_name: broker
#     networks:
#       - rmoff_kafka
#     ports:
#       - '9092:9092'
#       - "19092:19092"
#     depends_on:
#       - zookeeper
#     environment:
#       KAFKA_ADVERTISED_HOST_NAME: broker
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,CONNECTIONS_FROM_HOST://localhost:19092
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT

# networks:
#   rmoff_kafka:
#     name: rmoff_kafka

  # zookeeper:
  #   image: 'bitnami/zookeeper:latest'
  #   ports:
  #     - '2181:2181'
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ALLOW_ANONYMOUS_LOGIN: yes
  # kafka:
  #   image: 'bitnami/kafka:latest'
  #   ports:
  #     - '9092:9092'
  #     - '19092:19092'
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: broker
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,CONNECTIONS_FROM_HOST://localhost:19092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
  #     ALLOW_PLAINTEXT_LISTENER: yes
  #   depends_on:
  #     - zookeeper

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper